<Application x:Class="UnivercityDB.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UnivercityDB"
             xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:local1="clr-namespace:UnivercityDB.Model"
             StartupUri="View/Auth.xaml">

    <Application.Resources>

    <local1:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Style x:Key="BlueMenuStyle" TargetType="Menu">
            <!-- Общие настройки меню -->
            <Setter Property="Background" Value="#2196F3"/>
            <!-- Синий фон -->
            <Setter Property="Foreground" Value="White"/>
            <!-- Белый текст -->
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="#1976D2"/>
            <!-- Темно-синий контур -->
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style x:Key="BlueMenuItemStyle" TargetType="MenuItem">
            <!-- Общие настройки элементов меню -->
            <Setter Property="Background" Value="#2196F3"/>
            <!-- Прозрачный фон -->
            <Setter Property="Foreground" Value="White"/>
            <!-- Яркий белый текст -->
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5 10"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Style.Triggers>
                <!-- Эффект при наведении -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1565C0"/>
                    <!-- Более яркий синий фон -->
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                    <!-- Остается белым -->
                </Trigger>
                <!-- Отключенный элемент -->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#CFD8DC"/>
                    <!-- Светло-серый текст для большего контраста -->
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style x:Key="BlueDataGridStyle" TargetType="DataGrid">
            <!-- Общие настройки DataGrid -->
            <Setter Property="Background" Value="#E3F2FD"/>
            <!-- Светло-синий фон -->
            <Setter Property="Foreground" Value="Black"/>
            <!-- Синий цвет текста -->
            <Setter Property="BorderBrush" Value="#1976D2"/>
            <!-- Темно-синий контур -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="White"/>
            <!-- Фон для невыделенных строк -->
            <Setter Property="AlternatingRowBackground" Value="#F1F8E9"/>
            <!-- Фон для чередующихся строк -->
            <Setter Property="HorizontalGridLinesBrush" Value="#B0BEC5"/>
            <!-- Цвет горизонтальных линий -->
            <Setter Property="VerticalGridLinesBrush" Value="#B0BEC5"/>
            <!-- Цвет вертикальных линий -->
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>

            <!-- Настройка стиля для заголовков -->
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#2196F3"/>
                        <!-- Синий фон -->
                        <Setter Property="Foreground" Value="White"/>
                        <!-- Белый текст -->
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="10 5"/>
                        <Setter Property="BorderBrush" Value="#1976D2"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <!-- Нижняя граница -->
                    </Style>
                </Setter.Value>
            </Setter>

            <!-- Настройка выделенных строк -->
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="BorderBrush" Value="#1976D2"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#BBDEFB"/>
                                <!-- Светло-синий фон -->
                                <Setter Property="Foreground" Value="#0D47A1"/>
                                <!-- Глубокий синий текст -->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BlueTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#E3F2FD"/>
            <Setter Property="Foreground" Value="#2196F3"/>
            <Setter Property="BorderBrush" Value="#1976D2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">

                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <TextBlock x:Name="textBlock"
                                   Margin="2,0,0,0"
                                   Foreground="{TemplateBinding BorderBrush}"
                                   IsHitTestVisible="False"
                                   Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="Collapsed" />

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="textBlock" Property="Visibility" Value="Visible" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="BlueTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#2196F3"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="BlueButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#2196F3"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#1976D2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15 10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#33300000" Direction="320" ShadowDepth="5" Opacity="0.5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1976D2"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#0D47A1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#B0BEC5"/>
                    <!-- Тусклый серый фон -->
                    <Setter Property="Foreground" Value="#ECEFF1"/>
                    <!-- Светло-серый текст -->
                    <Setter Property="Cursor" Value="Arrow"/>
                    <!-- Стандартный курсор -->
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#00000000" ShadowDepth="0" Opacity="0"/>
                            <!-- Убираем тень -->
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Динамический стиль для управления размером шрифта -->
        <Style TargetType="Control">
            <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
        </Style>
        <!-- Ресурс для глобального размера шрифта -->
        <System:Double x:Key="GlobalFontSize">12</System:Double>

        <Style TargetType="Button">
            <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
        </Style>

        <Style x:Key="BlueListBoxStyle" TargetType="ListBox">
            <!-- Общие настройки ListBox -->
            <Setter Property="Background" Value="#E3F2FD"/>
            <!-- Светло-синий фон -->
            <Setter Property="Foreground" Value="#2196F3"/>
            <!-- Синий текст -->
            <Setter Property="BorderBrush" Value="#1976D2"/>
            <!-- Темно-синий контур -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        <Style x:Key="BlueListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            
                                <!-- Эффект при наведении -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#BBDEFB"/>
                                    <!-- Светло-синий фон -->
                                    <Setter Property="Foreground" Value="#0D47A1"/>
                                    <!-- Глубокий синий текст -->
                                </Trigger>
                                <!-- Эффект для выделенного элемента -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#1976D2"/>
                                    <!-- Темно-синий фон -->
                                    <Setter Property="Foreground" Value="Black"/>
                                    <!-- Белый текст -->
                                </Trigger>
                                <!-- Эффект для отключенного элемента -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#B0BEC5"/>
                                <!-- Серый текст -->
                                <Setter Property="Background" Value="Transparent"/>
                                <!-- Прозрачный фон -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BluePasswordBoxStyle" TargetType="PasswordBox">
            <!-- Основные свойства -->
            <Setter Property="Background" Value="#E3F2FD"/>
            <!-- Светло-синий фон -->
            <Setter Property="Foreground" Value="#2196F3"/>
            <!-- Синий текст -->
            <Setter Property="BorderBrush" Value="#1976D2"/>
            <!-- Темно-синий контур -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="CaretBrush" Value="#1976D2"/>
            <!-- Синий курсор -->

            <!-- Триггеры -->
            <Style.Triggers>
                <!-- Наведение мыши -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#BBDEFB"/>
                    <!-- Светлее при наведении -->
                    <Setter Property="BorderBrush" Value="#1565C0"/>
                    <!-- Более насыщенная рамка -->
                </Trigger>
                <!-- Фокус -->
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#0D47A1"/>
                    <!-- Глубокий синий контур -->
                </Trigger>
                <!-- Отключенное состояние -->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#CFD8DC"/>
                    <!-- Серый фон -->
                    <Setter Property="Foreground" Value="#B0BEC5"/>
                    <!-- Светло-серый текст -->
                    <Setter Property="BorderBrush" Value="#B0BEC5"/>
                    <!-- Светло-серая рамка -->
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Flat ComboBox -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#1976D2"/>
        <!-- Темно-синий -->
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#E3F2FD"/>
        <!-- Светло-синий -->
        <SolidColorBrush x:Key="ComboBoxNormalForegroundBrush" Color="#2196F3"/>
        <!-- Синий текст -->
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#9E9E9E"/>
        <!-- Серый текст -->
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#E0E0E0"/>
        <!-- Светло-серый -->
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#BDBDBD"/>
        <!-- Серый контур -->
        <SolidColorBrush x:Key="ComboBoxItemHoverBackgroundBrush" Color="#BBDEFB"/>
        <!-- Светло-синий при наведении -->
        <SolidColorBrush x:Key="ComboBoxItemSelectedBackgroundBrush" Color="#1976D2"/>
        <!-- Темно-синий при выборе -->
        <SolidColorBrush x:Key="ComboBoxItemHoverForegroundBrush" Color="#0D47A1"/>
        <!-- Темнее синий текст -->
        <SolidColorBrush x:Key="ComboBoxItemSelectedForegroundBrush" Color="White"/>
        <!-- Белый текст при выборе -->


        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="BlueComboBoxStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
